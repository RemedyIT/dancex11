/*
 * This code was generated by the XML Schema Compiler.
 *
 * Changes made to this code will most likely be overwritten
 * when the handlers are recompiled.
 */
#include "Deployment.hpp"

namespace DAnCE
{
  namespace Config_Handlers
  {
  }
}

namespace DAnCE
{
  namespace Config_Handlers
  {
  }
}

namespace DAnCE
{
  namespace Config_Handlers
  {
    namespace reader
    {
      ::DAnCE::Config_Handlers::Domain
      domain (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "domain")
        {
          ::DAnCE::Config_Handlers::Domain r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::deploymentPlan
      DeploymentPlan (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "DeploymentPlan")
        {
          ::DAnCE::Config_Handlers::deploymentPlan r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::ImplementationArtifactDescription
      implementationArtifactDescription (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "implementationArtifactDescription")
        {
          ::DAnCE::Config_Handlers::ImplementationArtifactDescription r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::ComponentInterfaceDescription
      componentInterfaceDescription (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "componentInterfaceDescription")
        {
          ::DAnCE::Config_Handlers::ComponentInterfaceDescription r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::ComponentImplementationDescription
      componentImplementationDescription (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "componentImplementationDescription")
        {
          ::DAnCE::Config_Handlers::ComponentImplementationDescription r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::ComponentPackageDescription
      componentPackageDescription (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "componentPackageDescription")
        {
          ::DAnCE::Config_Handlers::ComponentPackageDescription r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::PackageConfiguration
      packageConfiguration (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "packageConfiguration")
        {
          ::DAnCE::Config_Handlers::PackageConfiguration r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }

    namespace reader
    {
      ::DAnCE::Config_Handlers::TopLevelPackageDescription
      topLevelPackageDescription (xercesc::DOMDocument const* d)
      {
        xercesc::DOMElement* dom_element = d->getDocumentElement ();
        if (!dom_element)
        {
          throw 1;
        }

        ::XSCRT::XML::Element<char> e (dom_element);
        if (e.name () == "topLevelPackageDescription")
        {
          ::DAnCE::Config_Handlers::TopLevelPackageDescription r (e);

          return r;
        }

        else
        {
          throw 1;
        }
      }
    }
  }
}

